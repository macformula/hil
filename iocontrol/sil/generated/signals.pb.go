// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.0
// source: proto/signals.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalAccess int32

const (
	SignalAccess_SIGNAL_ACCESS_UNKNOWN   SignalAccess = 0
	SignalAccess_SIGNAL_ACCESS_READONLY  SignalAccess = 1
	SignalAccess_SIGNAL_ACCESS_WRITEONLY SignalAccess = 2
	SignalAccess_SIGNAL_ACCESS_READWRITE SignalAccess = 3
)

// Enum value maps for SignalAccess.
var (
	SignalAccess_name = map[int32]string{
		0: "SIGNAL_ACCESS_UNKNOWN",
		1: "SIGNAL_ACCESS_READONLY",
		2: "SIGNAL_ACCESS_WRITEONLY",
		3: "SIGNAL_ACCESS_READWRITE",
	}
	SignalAccess_value = map[string]int32{
		"SIGNAL_ACCESS_UNKNOWN":   0,
		"SIGNAL_ACCESS_READONLY":  1,
		"SIGNAL_ACCESS_WRITEONLY": 2,
		"SIGNAL_ACCESS_READWRITE": 3,
	}
)

func (x SignalAccess) Enum() *SignalAccess {
	p := new(SignalAccess)
	*p = x
	return p
}

func (x SignalAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_signals_proto_enumTypes[0].Descriptor()
}

func (SignalAccess) Type() protoreflect.EnumType {
	return &file_proto_signals_proto_enumTypes[0]
}

func (x SignalAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalAccess.Descriptor instead.
func (SignalAccess) EnumDescriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{0}
}

type SignalType int32

const (
	SignalType_SIGNAL_TYPE_UNKNOWN SignalType = 0
	SignalType_SIGNAL_TYPE_ADC     SignalType = 1
	SignalType_SIGNAL_TYPE_DIGITAL SignalType = 2
	SignalType_SIGNAL_TYPE_PWM     SignalType = 3
)

// Enum value maps for SignalType.
var (
	SignalType_name = map[int32]string{
		0: "SIGNAL_TYPE_UNKNOWN",
		1: "SIGNAL_TYPE_ADC",
		2: "SIGNAL_TYPE_DIGITAL",
		3: "SIGNAL_TYPE_PWM",
	}
	SignalType_value = map[string]int32{
		"SIGNAL_TYPE_UNKNOWN": 0,
		"SIGNAL_TYPE_ADC":     1,
		"SIGNAL_TYPE_DIGITAL": 2,
		"SIGNAL_TYPE_PWM":     3,
	}
)

func (x SignalType) Enum() *SignalType {
	p := new(SignalType)
	*p = x
	return p
}

func (x SignalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_signals_proto_enumTypes[1].Descriptor()
}

func (SignalType) Type() protoreflect.EnumType {
	return &file_proto_signals_proto_enumTypes[1]
}

func (x SignalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalType.Descriptor instead.
func (SignalType) EnumDescriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{1}
}

type AdcSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage float64 `protobuf:"fixed64,1,opt,name=voltage,proto3" json:"voltage,omitempty"`
}

func (x *AdcSignal) Reset() {
	*x = AdcSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdcSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdcSignal) ProtoMessage() {}

func (x *AdcSignal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdcSignal.ProtoReflect.Descriptor instead.
func (*AdcSignal) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{0}
}

func (x *AdcSignal) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

type PwmSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DutyCycle uint32 `protobuf:"varint,1,opt,name=duty_cycle,json=dutyCycle,proto3" json:"duty_cycle,omitempty"`
	Frequency uint32 `protobuf:"varint,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
}

func (x *PwmSignal) Reset() {
	*x = PwmSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PwmSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PwmSignal) ProtoMessage() {}

func (x *PwmSignal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PwmSignal.ProtoReflect.Descriptor instead.
func (*PwmSignal) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{1}
}

func (x *PwmSignal) GetDutyCycle() uint32 {
	if x != nil {
		return x.DutyCycle
	}
	return 0
}

func (x *PwmSignal) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

type DigitalSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level bool `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *DigitalSignal) Reset() {
	*x = DigitalSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigitalSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalSignal) ProtoMessage() {}

func (x *DigitalSignal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalSignal.ProtoReflect.Descriptor instead.
func (*DigitalSignal) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{2}
}

func (x *DigitalSignal) GetLevel() bool {
	if x != nil {
		return x.Level
	}
	return false
}

type SignalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcuName      string       `protobuf:"bytes,1,opt,name=ecu_name,json=ecuName,proto3" json:"ecu_name,omitempty"`
	SignalName   string       `protobuf:"bytes,2,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	SignalAccess SignalAccess `protobuf:"varint,3,opt,name=signal_access,json=signalAccess,proto3,enum=signals.SignalAccess" json:"signal_access,omitempty"`
	SignalType   SignalType   `protobuf:"varint,4,opt,name=signal_type,json=signalType,proto3,enum=signals.SignalType" json:"signal_type,omitempty"`
}

func (x *SignalInfo) Reset() {
	*x = SignalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalInfo) ProtoMessage() {}

func (x *SignalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalInfo.ProtoReflect.Descriptor instead.
func (*SignalInfo) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{3}
}

func (x *SignalInfo) GetEcuName() string {
	if x != nil {
		return x.EcuName
	}
	return ""
}

func (x *SignalInfo) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *SignalInfo) GetSignalAccess() SignalAccess {
	if x != nil {
		return x.SignalAccess
	}
	return SignalAccess_SIGNAL_ACCESS_UNKNOWN
}

func (x *SignalInfo) GetSignalType() SignalType {
	if x != nil {
		return x.SignalType
	}
	return SignalType_SIGNAL_TYPE_UNKNOWN
}

type EnumerateRegisteredSignalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnumerateRegisteredSignalsRequest) Reset() {
	*x = EnumerateRegisteredSignalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumerateRegisteredSignalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumerateRegisteredSignalsRequest) ProtoMessage() {}

func (x *EnumerateRegisteredSignalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumerateRegisteredSignalsRequest.ProtoReflect.Descriptor instead.
func (*EnumerateRegisteredSignalsRequest) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{4}
}

type EnumerateRegisteredSignalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Signals []*SignalInfo `protobuf:"bytes,3,rep,name=signals,proto3" json:"signals,omitempty"`
}

func (x *EnumerateRegisteredSignalsResponse) Reset() {
	*x = EnumerateRegisteredSignalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumerateRegisteredSignalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumerateRegisteredSignalsResponse) ProtoMessage() {}

func (x *EnumerateRegisteredSignalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumerateRegisteredSignalsResponse.ProtoReflect.Descriptor instead.
func (*EnumerateRegisteredSignalsResponse) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{5}
}

func (x *EnumerateRegisteredSignalsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *EnumerateRegisteredSignalsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *EnumerateRegisteredSignalsResponse) GetSignals() []*SignalInfo {
	if x != nil {
		return x.Signals
	}
	return nil
}

type WriteSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcuName    string `protobuf:"bytes,1,opt,name=ecu_name,json=ecuName,proto3" json:"ecu_name,omitempty"`
	SignalName string `protobuf:"bytes,2,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	// Types that are assignable to Value:
	//
	//	*WriteSignalRequest_ValueAdc
	//	*WriteSignalRequest_ValueDigital
	//	*WriteSignalRequest_ValuePwm
	Value isWriteSignalRequest_Value `protobuf_oneof:"value"`
}

func (x *WriteSignalRequest) Reset() {
	*x = WriteSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSignalRequest) ProtoMessage() {}

func (x *WriteSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSignalRequest.ProtoReflect.Descriptor instead.
func (*WriteSignalRequest) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{6}
}

func (x *WriteSignalRequest) GetEcuName() string {
	if x != nil {
		return x.EcuName
	}
	return ""
}

func (x *WriteSignalRequest) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (m *WriteSignalRequest) GetValue() isWriteSignalRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *WriteSignalRequest) GetValueAdc() *AdcSignal {
	if x, ok := x.GetValue().(*WriteSignalRequest_ValueAdc); ok {
		return x.ValueAdc
	}
	return nil
}

func (x *WriteSignalRequest) GetValueDigital() *DigitalSignal {
	if x, ok := x.GetValue().(*WriteSignalRequest_ValueDigital); ok {
		return x.ValueDigital
	}
	return nil
}

func (x *WriteSignalRequest) GetValuePwm() *PwmSignal {
	if x, ok := x.GetValue().(*WriteSignalRequest_ValuePwm); ok {
		return x.ValuePwm
	}
	return nil
}

type isWriteSignalRequest_Value interface {
	isWriteSignalRequest_Value()
}

type WriteSignalRequest_ValueAdc struct {
	ValueAdc *AdcSignal `protobuf:"bytes,3,opt,name=value_adc,json=valueAdc,proto3,oneof"`
}

type WriteSignalRequest_ValueDigital struct {
	ValueDigital *DigitalSignal `protobuf:"bytes,4,opt,name=value_digital,json=valueDigital,proto3,oneof"`
}

type WriteSignalRequest_ValuePwm struct {
	ValuePwm *PwmSignal `protobuf:"bytes,5,opt,name=value_pwm,json=valuePwm,proto3,oneof"`
}

func (*WriteSignalRequest_ValueAdc) isWriteSignalRequest_Value() {}

func (*WriteSignalRequest_ValueDigital) isWriteSignalRequest_Value() {}

func (*WriteSignalRequest_ValuePwm) isWriteSignalRequest_Value() {}

type WriteSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WriteSignalResponse) Reset() {
	*x = WriteSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSignalResponse) ProtoMessage() {}

func (x *WriteSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSignalResponse.ProtoReflect.Descriptor instead.
func (*WriteSignalResponse) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{7}
}

func (x *WriteSignalResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *WriteSignalResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReadSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalName string `protobuf:"bytes,1,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
}

func (x *ReadSignalRequest) Reset() {
	*x = ReadSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSignalRequest) ProtoMessage() {}

func (x *ReadSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSignalRequest.ProtoReflect.Descriptor instead.
func (*ReadSignalRequest) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{8}
}

func (x *ReadSignalRequest) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

type ReadSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ReadSignalResponse_ValueAdc
	//	*ReadSignalResponse_ValueDigital
	//	*ReadSignalResponse_ValuePwm
	Value isReadSignalResponse_Value `protobuf_oneof:"value"`
}

func (x *ReadSignalResponse) Reset() {
	*x = ReadSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSignalResponse) ProtoMessage() {}

func (x *ReadSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSignalResponse.ProtoReflect.Descriptor instead.
func (*ReadSignalResponse) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{9}
}

func (x *ReadSignalResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ReadSignalResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (m *ReadSignalResponse) GetValue() isReadSignalResponse_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ReadSignalResponse) GetValueAdc() *AdcSignal {
	if x, ok := x.GetValue().(*ReadSignalResponse_ValueAdc); ok {
		return x.ValueAdc
	}
	return nil
}

func (x *ReadSignalResponse) GetValueDigital() *DigitalSignal {
	if x, ok := x.GetValue().(*ReadSignalResponse_ValueDigital); ok {
		return x.ValueDigital
	}
	return nil
}

func (x *ReadSignalResponse) GetValuePwm() *PwmSignal {
	if x, ok := x.GetValue().(*ReadSignalResponse_ValuePwm); ok {
		return x.ValuePwm
	}
	return nil
}

type isReadSignalResponse_Value interface {
	isReadSignalResponse_Value()
}

type ReadSignalResponse_ValueAdc struct {
	ValueAdc *AdcSignal `protobuf:"bytes,3,opt,name=value_adc,json=valueAdc,proto3,oneof"`
}

type ReadSignalResponse_ValueDigital struct {
	ValueDigital *DigitalSignal `protobuf:"bytes,4,opt,name=value_digital,json=valueDigital,proto3,oneof"`
}

type ReadSignalResponse_ValuePwm struct {
	ValuePwm *PwmSignal `protobuf:"bytes,5,opt,name=value_pwm,json=valuePwm,proto3,oneof"`
}

func (*ReadSignalResponse_ValueAdc) isReadSignalResponse_Value() {}

func (*ReadSignalResponse_ValueDigital) isReadSignalResponse_Value() {}

func (*ReadSignalResponse_ValuePwm) isReadSignalResponse_Value() {}

type RegisterSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcuName      string       `protobuf:"bytes,1,opt,name=ecu_name,json=ecuName,proto3" json:"ecu_name,omitempty"`
	SignalName   string       `protobuf:"bytes,2,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	SignalAccess SignalAccess `protobuf:"varint,3,opt,name=signal_access,json=signalAccess,proto3,enum=signals.SignalAccess" json:"signal_access,omitempty"`
	// Types that are assignable to InitialValue:
	//
	//	*RegisterSignalRequest_InitialValueAdc
	//	*RegisterSignalRequest_InitialValueDigital
	//	*RegisterSignalRequest_InitialValuePwm
	InitialValue isRegisterSignalRequest_InitialValue `protobuf_oneof:"initial_value"`
}

func (x *RegisterSignalRequest) Reset() {
	*x = RegisterSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSignalRequest) ProtoMessage() {}

func (x *RegisterSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSignalRequest.ProtoReflect.Descriptor instead.
func (*RegisterSignalRequest) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterSignalRequest) GetEcuName() string {
	if x != nil {
		return x.EcuName
	}
	return ""
}

func (x *RegisterSignalRequest) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *RegisterSignalRequest) GetSignalAccess() SignalAccess {
	if x != nil {
		return x.SignalAccess
	}
	return SignalAccess_SIGNAL_ACCESS_UNKNOWN
}

func (m *RegisterSignalRequest) GetInitialValue() isRegisterSignalRequest_InitialValue {
	if m != nil {
		return m.InitialValue
	}
	return nil
}

func (x *RegisterSignalRequest) GetInitialValueAdc() *AdcSignal {
	if x, ok := x.GetInitialValue().(*RegisterSignalRequest_InitialValueAdc); ok {
		return x.InitialValueAdc
	}
	return nil
}

func (x *RegisterSignalRequest) GetInitialValueDigital() *DigitalSignal {
	if x, ok := x.GetInitialValue().(*RegisterSignalRequest_InitialValueDigital); ok {
		return x.InitialValueDigital
	}
	return nil
}

func (x *RegisterSignalRequest) GetInitialValuePwm() *PwmSignal {
	if x, ok := x.GetInitialValue().(*RegisterSignalRequest_InitialValuePwm); ok {
		return x.InitialValuePwm
	}
	return nil
}

type isRegisterSignalRequest_InitialValue interface {
	isRegisterSignalRequest_InitialValue()
}

type RegisterSignalRequest_InitialValueAdc struct {
	InitialValueAdc *AdcSignal `protobuf:"bytes,4,opt,name=initial_value_adc,json=initialValueAdc,proto3,oneof"`
}

type RegisterSignalRequest_InitialValueDigital struct {
	InitialValueDigital *DigitalSignal `protobuf:"bytes,5,opt,name=initial_value_digital,json=initialValueDigital,proto3,oneof"`
}

type RegisterSignalRequest_InitialValuePwm struct {
	InitialValuePwm *PwmSignal `protobuf:"bytes,6,opt,name=initial_value_pwm,json=initialValuePwm,proto3,oneof"`
}

func (*RegisterSignalRequest_InitialValueAdc) isRegisterSignalRequest_InitialValue() {}

func (*RegisterSignalRequest_InitialValueDigital) isRegisterSignalRequest_InitialValue() {}

func (*RegisterSignalRequest_InitialValuePwm) isRegisterSignalRequest_InitialValue() {}

type RegisterSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RegisterSignalResponse) Reset() {
	*x = RegisterSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signals_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSignalResponse) ProtoMessage() {}

func (x *RegisterSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signals_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSignalResponse.ProtoReflect.Descriptor instead.
func (*RegisterSignalResponse) Descriptor() ([]byte, []int) {
	return file_proto_signals_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterSignalResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RegisterSignalResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_signals_proto protoreflect.FileDescriptor

var file_proto_signals_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0x25,
	0x0a, 0x09, 0x41, 0x64, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x09, 0x50, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x25, 0x0a, 0x0d, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xba, 0x01, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x63, 0x75, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x63, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a,
	0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x22, 0x45, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a,
	0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0xfe, 0x01, 0x0a,
	0x12, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x63, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x63, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x31, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x64, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x64, 0x63,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41,
	0x64, 0x63, 0x12, 0x3d, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x73, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x12, 0x31, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x77, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x50,
	0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x50, 0x77, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a,
	0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x34, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a,
	0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x64, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x41, 0x64, 0x63, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x64, 0x63,
	0x12, 0x3d, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48,
	0x00, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x12,
	0x31, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x77, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x50, 0x77, 0x6d,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x50,
	0x77, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf2, 0x02, 0x0a, 0x15,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x63, 0x75, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x63, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a,
	0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61,
	0x64, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x2e, 0x41, 0x64, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x64, 0x63, 0x12,
	0x4c, 0x0a, 0x15, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x40, 0x0a,
	0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70,
	0x77, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x2e, 0x50, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x77, 0x6d, 0x42,
	0x0f, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x46, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x7f, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x47, 0x4e,
	0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x68, 0x0a, 0x0a, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x49, 0x47, 0x4e, 0x41,
	0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x44, 0x43, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x47, 0x49, 0x54, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x57,
	0x4d, 0x10, 0x03, 0x32, 0xec, 0x02, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12,
	0x77, 0x0a, 0x1a, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x2a, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12,
	0x1e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x73, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_signals_proto_rawDescOnce sync.Once
	file_proto_signals_proto_rawDescData = file_proto_signals_proto_rawDesc
)

func file_proto_signals_proto_rawDescGZIP() []byte {
	file_proto_signals_proto_rawDescOnce.Do(func() {
		file_proto_signals_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_signals_proto_rawDescData)
	})
	return file_proto_signals_proto_rawDescData
}

var file_proto_signals_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_signals_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_signals_proto_goTypes = []interface{}{
	(SignalAccess)(0),                          // 0: signals.SignalAccess
	(SignalType)(0),                            // 1: signals.SignalType
	(*AdcSignal)(nil),                          // 2: signals.AdcSignal
	(*PwmSignal)(nil),                          // 3: signals.PwmSignal
	(*DigitalSignal)(nil),                      // 4: signals.DigitalSignal
	(*SignalInfo)(nil),                         // 5: signals.SignalInfo
	(*EnumerateRegisteredSignalsRequest)(nil),  // 6: signals.EnumerateRegisteredSignalsRequest
	(*EnumerateRegisteredSignalsResponse)(nil), // 7: signals.EnumerateRegisteredSignalsResponse
	(*WriteSignalRequest)(nil),                 // 8: signals.WriteSignalRequest
	(*WriteSignalResponse)(nil),                // 9: signals.WriteSignalResponse
	(*ReadSignalRequest)(nil),                  // 10: signals.ReadSignalRequest
	(*ReadSignalResponse)(nil),                 // 11: signals.ReadSignalResponse
	(*RegisterSignalRequest)(nil),              // 12: signals.RegisterSignalRequest
	(*RegisterSignalResponse)(nil),             // 13: signals.RegisterSignalResponse
}
var file_proto_signals_proto_depIdxs = []int32{
	0,  // 0: signals.SignalInfo.signal_access:type_name -> signals.SignalAccess
	1,  // 1: signals.SignalInfo.signal_type:type_name -> signals.SignalType
	5,  // 2: signals.EnumerateRegisteredSignalsResponse.signals:type_name -> signals.SignalInfo
	2,  // 3: signals.WriteSignalRequest.value_adc:type_name -> signals.AdcSignal
	4,  // 4: signals.WriteSignalRequest.value_digital:type_name -> signals.DigitalSignal
	3,  // 5: signals.WriteSignalRequest.value_pwm:type_name -> signals.PwmSignal
	2,  // 6: signals.ReadSignalResponse.value_adc:type_name -> signals.AdcSignal
	4,  // 7: signals.ReadSignalResponse.value_digital:type_name -> signals.DigitalSignal
	3,  // 8: signals.ReadSignalResponse.value_pwm:type_name -> signals.PwmSignal
	0,  // 9: signals.RegisterSignalRequest.signal_access:type_name -> signals.SignalAccess
	2,  // 10: signals.RegisterSignalRequest.initial_value_adc:type_name -> signals.AdcSignal
	4,  // 11: signals.RegisterSignalRequest.initial_value_digital:type_name -> signals.DigitalSignal
	3,  // 12: signals.RegisterSignalRequest.initial_value_pwm:type_name -> signals.PwmSignal
	6,  // 13: signals.Signals.EnumerateRegisteredSignals:input_type -> signals.EnumerateRegisteredSignalsRequest
	8,  // 14: signals.Signals.WriteSignal:input_type -> signals.WriteSignalRequest
	10, // 15: signals.Signals.ReadSignal:input_type -> signals.ReadSignalRequest
	12, // 16: signals.Signals.RegisterSignal:input_type -> signals.RegisterSignalRequest
	7,  // 17: signals.Signals.EnumerateRegisteredSignals:output_type -> signals.EnumerateRegisteredSignalsResponse
	9,  // 18: signals.Signals.WriteSignal:output_type -> signals.WriteSignalResponse
	11, // 19: signals.Signals.ReadSignal:output_type -> signals.ReadSignalResponse
	13, // 20: signals.Signals.RegisterSignal:output_type -> signals.RegisterSignalResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_signals_proto_init() }
func file_proto_signals_proto_init() {
	if File_proto_signals_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_signals_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdcSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PwmSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigitalSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumerateRegisteredSignalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumerateRegisteredSignalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signals_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_signals_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*WriteSignalRequest_ValueAdc)(nil),
		(*WriteSignalRequest_ValueDigital)(nil),
		(*WriteSignalRequest_ValuePwm)(nil),
	}
	file_proto_signals_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ReadSignalResponse_ValueAdc)(nil),
		(*ReadSignalResponse_ValueDigital)(nil),
		(*ReadSignalResponse_ValuePwm)(nil),
	}
	file_proto_signals_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*RegisterSignalRequest_InitialValueAdc)(nil),
		(*RegisterSignalRequest_InitialValueDigital)(nil),
		(*RegisterSignalRequest_InitialValuePwm)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_signals_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_signals_proto_goTypes,
		DependencyIndexes: file_proto_signals_proto_depIdxs,
		EnumInfos:         file_proto_signals_proto_enumTypes,
		MessageInfos:      file_proto_signals_proto_msgTypes,
	}.Build()
	File_proto_signals_proto = out.File
	file_proto_signals_proto_rawDesc = nil
	file_proto_signals_proto_goTypes = nil
	file_proto_signals_proto_depIdxs = nil
}
