"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SubmitTagRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAG_FIELD_NUMBER: builtins.int
    VALUE_STR_FIELD_NUMBER: builtins.int
    VALUE_INT_FIELD_NUMBER: builtins.int
    VALUE_FLOAT_FIELD_NUMBER: builtins.int
    VALUE_BOOL_FIELD_NUMBER: builtins.int
    tag: builtins.str
    value_str: builtins.str
    value_int: builtins.int
    value_float: builtins.float
    value_bool: builtins.bool
    def __init__(
        self,
        *,
        tag: builtins.str = ...,
        value_str: builtins.str = ...,
        value_int: builtins.int = ...,
        value_float: builtins.float = ...,
        value_bool: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data", b"data", "value_bool", b"value_bool", "value_float", b"value_float", "value_int", b"value_int", "value_str", b"value_str"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "tag", b"tag", "value_bool", b"value_bool", "value_float", b"value_float", "value_int", b"value_int", "value_str", b"value_str"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["value_str", "value_int", "value_float", "value_bool"] | None: ...

global___SubmitTagRequest = SubmitTagRequest

@typing_extensions.final
class SubmitTagResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    IS_PASSING_FIELD_NUMBER: builtins.int
    success: builtins.bool
    error: builtins.str
    is_passing: builtins.bool
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        error: builtins.str = ...,
        is_passing: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "is_passing", b"is_passing", "success", b"success"]) -> None: ...

global___SubmitTagResponse = SubmitTagResponse

@typing_extensions.final
class CompleteTestRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_ID_FIELD_NUMBER: builtins.int
    SEQUENCE_NAME_FIELD_NUMBER: builtins.int
    test_id: builtins.str
    sequence_name: builtins.str
    def __init__(
        self,
        *,
        test_id: builtins.str = ...,
        sequence_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sequence_name", b"sequence_name", "test_id", b"test_id"]) -> None: ...

global___CompleteTestRequest = CompleteTestRequest

@typing_extensions.final
class CompleteTestResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_PASSED_FIELD_NUMBER: builtins.int
    test_passed: builtins.bool
    def __init__(
        self,
        *,
        test_passed: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["test_passed", b"test_passed"]) -> None: ...

global___CompleteTestResponse = CompleteTestResponse

@typing_extensions.final
class SubmitErrorRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_FIELD_NUMBER: builtins.int
    error: builtins.str
    def __init__(
        self,
        *,
        error: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error"]) -> None: ...

global___SubmitErrorRequest = SubmitErrorRequest

@typing_extensions.final
class SubmitErrorResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_COUNT_FIELD_NUMBER: builtins.int
    error_count: builtins.int
    def __init__(
        self,
        *,
        error_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error_count", b"error_count"]) -> None: ...

global___SubmitErrorResponse = SubmitErrorResponse

@typing_extensions.final
class EnumerateErrorsRequest(google.protobuf.message.Message):
    """No fields are defined in this message."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___EnumerateErrorsRequest = EnumerateErrorsRequest

@typing_extensions.final
class EnumerateErrorsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        errors: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors", b"errors"]) -> None: ...

global___EnumerateErrorsResponse = EnumerateErrorsResponse

@typing_extensions.final
class EnumerateTagsRequest(google.protobuf.message.Message):
    """No fields are defined in this message."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___EnumerateTagsRequest = EnumerateTagsRequest

@typing_extensions.final
class EnumerateTagsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAGS_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Tag]: ...
    def __init__(
        self,
        *,
        tags: collections.abc.Iterable[global___Tag] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["tags", b"tags"]) -> None: ...

global___EnumerateTagsResponse = EnumerateTagsResponse

@typing_extensions.final
class Tag(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAG_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    COMP_OPERATOR_FIELD_NUMBER: builtins.int
    UPPER_LIMIT_FIELD_NUMBER: builtins.int
    LOWER_LIMIT_FIELD_NUMBER: builtins.int
    EXPECTED_VAL_STR_FIELD_NUMBER: builtins.int
    EXPECTED_VAL_INT_FIELD_NUMBER: builtins.int
    EXPECTED_VAL_FLOAT_FIELD_NUMBER: builtins.int
    EXPECTED_VAL_BOOL_FIELD_NUMBER: builtins.int
    tag_id: builtins.str
    description: builtins.str
    comp_operator: builtins.str
    upper_limit: builtins.float
    lower_limit: builtins.float
    expected_val_str: builtins.str
    expected_val_int: builtins.int
    expected_val_float: builtins.float
    expected_val_bool: builtins.bool
    def __init__(
        self,
        *,
        tag_id: builtins.str = ...,
        description: builtins.str = ...,
        comp_operator: builtins.str = ...,
        upper_limit: builtins.float = ...,
        lower_limit: builtins.float = ...,
        expected_val_str: builtins.str = ...,
        expected_val_int: builtins.int = ...,
        expected_val_float: builtins.float = ...,
        expected_val_bool: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expected_val", b"expected_val", "expected_val_bool", b"expected_val_bool", "expected_val_float", b"expected_val_float", "expected_val_int", b"expected_val_int", "expected_val_str", b"expected_val_str"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comp_operator", b"comp_operator", "description", b"description", "expected_val", b"expected_val", "expected_val_bool", b"expected_val_bool", "expected_val_float", b"expected_val_float", "expected_val_int", b"expected_val_int", "expected_val_str", b"expected_val_str", "lower_limit", b"lower_limit", "tag_id", b"tag_id", "upper_limit", b"upper_limit"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expected_val", b"expected_val"]) -> typing_extensions.Literal["expected_val_str", "expected_val_int", "expected_val_float", "expected_val_bool"] | None: ...

global___Tag = Tag
